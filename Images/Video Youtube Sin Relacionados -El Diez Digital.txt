Video explicaci√≥n:

https://www.youtube.com/watch?v=-EGZoGKppgA

<style>

.hytPlayerWrap {
position: relative;
}

.hytPlayerWrap.ended::after {
content: "";
position: absolute;
top: 0;
left: 0;
bottom: 0;
right: 0;
cursor: pointer;
background-color: black;
background-repeat: no-repeat;
background-position: center;
background-size: 128px 128px;
background-image: url("https://cdn1.iconfinder.com/data/icons/pointed-edge-web-navigation/107/redo-512.png");
}

.hytPlayerWrap.paused::after {
content: "";
position: absolute;
top: 0;
left: 0;
bottom: 0;
right: 0;
width: calc(100%);
cursor: pointer;
background-color: black;
background-repeat: no-repeat;
background-position: center;
background-size: 128px 128px;
background-image: url("https://i.ya-webdesign.com/images/play-button-png-16.png");
}

</style>

<div class="hytPlayerWrapOuter">
<div class="hytPlayerWrap video-placement"><iframe class="youtube" src="https://www.youtube.com/embed/-Wr9SrudCg0?rel=0&amp;enablejsapi=1" width="800px" height="400px" frameborder="0"></iframe></div>
</div>

<script>
"use strict";
document.addEventListener('DOMContentLoaded', function() {
// Activate only if not already activated
if (window.hideYTActivated) return;
// Activate on all players
let onYouTubeIframeAPIReadyCallbacks = [];
for (let playerWrap of document.querySelectorAll(".hytPlayerWrap")) {
let playerFrame = playerWrap.querySelector("iframe");

let tag = document.createElement('script');
tag.src = "https://www.youtube.com/iframe_api";
let firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

let onPlayerStateChange = function(event) {
if (event.data == YT.PlayerState.ENDED) {
playerWrap.classList.add("ended");
} else if (event.data == YT.PlayerState.PAUSED) {
playerWrap.classList.add("paused");
} else if (event.data == YT.PlayerState.PLAYING) {
playerWrap.classList.remove("ended");
playerWrap.classList.remove("paused");
}
};

let player;
onYouTubeIframeAPIReadyCallbacks.push(function() {
player = new YT.Player(playerFrame, {
events: {
'onStateChange': onPlayerStateChange
}
});
});

playerWrap.addEventListener("click", function() {
let playerState = player.getPlayerState();
if (playerState == YT.PlayerState.ENDED) {
player.seekTo(0);
} else if (playerState == YT.PlayerState.PAUSED) {
player.playVideo();
}
});
}

window.onYouTubeIframeAPIReady = function() {
for (let callback of onYouTubeIframeAPIReadyCallbacks) {
callback();
}
};

window.hideYTActivated = true;
});
</script>